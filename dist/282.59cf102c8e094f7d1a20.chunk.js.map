{"version":3,"file":"282.59cf102c8e094f7d1a20.chunk.js","mappings":"iLAAA,QAAe,IAA0B,0D,2CCSzC,MAAMA,GAASC,EAAAA,EAAAA,OAAK,IAAM,gCAM1B,8BAAmCC,MAAK,KACtCC,QAAQC,IAAI,sBAAsB,IAGpC,8BAAyCF,MAAK,KAC5CC,QAAQC,IAAI,qBAAqB,IAiHnC,QA9GA,WACE,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IACnCG,GAAWC,EAAAA,EAAAA,MAsCjB,OACEC,EAAAA,cAAA,OAAKC,GAAG,WACND,EAAAA,cAAA,OAAKC,GAAG,QACND,EAAAA,cAAA,OAAKC,GAAG,kBACND,EAAAA,cAAA,OAAKC,GAAG,0BACND,EAAAA,cAACE,EAAAA,cAAa,CACZC,IAAKC,EACLH,GAAG,cACHI,IAAI,UACJC,OAAQ,MAGZN,EAAAA,cAAA,OAAKC,GAAG,uBACND,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,QAAMC,GAAG,QACPD,EAAAA,cAAA,OAAKO,UAAU,YACbP,EAAAA,cAAA,OAAKO,UAAU,kBACbP,EAAAA,cAAA,SAAOQ,QAAQ,SAAQ,SACvBR,EAAAA,cAAA,SACEC,GAAG,QACHQ,KAAK,QACLC,UAAW,GACXC,KAAK,QACLC,aAAa,WACbC,SAAWC,GAAMpB,EAASoB,EAAEC,OAAOC,OACnCC,YAAY,QACZC,UAAQ,KAGZlB,EAAAA,cAAA,OAAKO,UAAU,kBACbP,EAAAA,cAAA,SAAOQ,QAAQ,YAAW,YAC1BR,EAAAA,cAAA,SACEC,GAAG,WACHQ,KAAK,WACLC,UAAW,GACXC,KAAK,WACLC,aAAa,mBACbC,SAAWC,GAAMjB,EAAYiB,EAAEC,OAAOC,OACtCC,YAAY,WACZC,UAAQ,KAGZlB,EAAAA,cAAA,UACEO,UAAU,kBACVE,KAAK,SACLU,QA7EEC,UAChBC,EAAMC,iBACN,MAAMC,EAAW,CAAE9B,MAAOA,EAAOG,SAAUA,GAE3C,IACE,MAAM4B,QAAejC,GAASkC,EAAAA,EAAAA,IAASF,KAGnCG,EAAAA,EAAAA,IAAoBF,IACtBG,IAAAA,KAAY,CACVC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAOO,SAAW,6BACxBC,mBAAmB,EACnBC,gBAAgB,EAChBC,eAAe,IAGnBpC,EAAS,OACX,CAAE,MAAOqC,GAEPR,IAAAA,KAAY,CACVC,KAAM,QACNC,MAAO,QACPC,KAAMK,EAAMC,SAAW,gCACvBJ,mBAAmB,EACnBC,gBAAgB,EAChBC,eAAe,GAEnB,IAiDa,WAKLlC,EAAAA,cAAA,OAAKC,GAAG,2BACND,EAAAA,cAAA,YAAM,KACNA,EAAAA,cAAA,KAAGO,UAAU,qBACXP,EAAAA,cAAA,YAAM,yBACmB,IACvBA,EAAAA,cAAA,KAAGmB,QA5FMkB,KACvBvC,EAAS,YAAY,GA2FuB,oBAO1CE,EAAAA,cAACd,EAAM,MAGb,C","sources":["webpack://appfronted/./public/assets/img/Portada_login.webp","webpack://appfronted/./src/pages/login/Login.jsx"],"sourcesContent":["export default __webpack_public_path__ + \"public/assets/img/f56df00c7669a6b207ea6d481bbd0a20.webp\";","import React, { lazy, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authUser, login } from \"../../slices/login/loginSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PortadaLogin from \"../../../public/assets/img/Portada_login.webp\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport MySwal from \"sweetalert2\";\r\nimport { isRejectedWithValue } from \"@reduxjs/toolkit\";\r\n\r\nconst Footer = lazy(() => import(\"../../components/footer/Footer\"));\r\n\r\nconst NavBarLogin = lazy(() =>\r\n  import(\"../../components/navBarLogin/NavBarLogin\")\r\n);\r\n// Carga dinámica del CSS\r\nimport(\"../../styles/_index.scss\").then(() => {\r\n  console.log(\"Reset styles loaded\");\r\n});\r\n\r\nimport(\"../../styles/pages/_login.scss\").then(() => {\r\n  console.log(\"Home styles loaded\");\r\n});\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const [email, setImail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const navigateRegister = () => {\r\n    navigate(\"/register\");\r\n  };\r\n\r\n  const loginUser = async (event) => {\r\n    event.preventDefault();\r\n    const objLogin = { email: email, password: password };\r\n\r\n    try {\r\n      const result = await dispatch(authUser(objLogin));\r\n\r\n      // Aquí verificamos si la acción fue rechazada con un valor usando isRejectedWithValue\r\n      if (isRejectedWithValue(result)) {\r\n        MySwal.fire({\r\n          icon: \"error\",\r\n          title: \"Error\",\r\n          text: result.payload || \"An unknown error occurred!\", // Muestra el mensaje de error\r\n          allowOutsideClick: true, // Permite hacer clic fuera para cerrar\r\n          allowEscapeKey: true, // Permite usar la tecla 'Escape' para cerrar\r\n          allowEnterKey: true, // Permite cerrar con la tecla 'Enter'\r\n        });\r\n      }\r\n      navigate(\"/app\")\r\n    } catch (error) {\r\n      // Cualquier otro error que no sea manejado por rejectWithValue\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: error.message || \"An unexpected error occurred!\",\r\n        allowOutsideClick: true, // Permite hacer clic fuera para cerrar\r\n        allowEscapeKey: true, // Permite usar la tecla 'Escape' para cerrar\r\n        allowEnterKey: true, // Permite cerrar con la tecla 'Enter'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <div id=\"main\">\r\n        <div id=\"main_container\">\r\n          <div id=\"main_container-portada\">\r\n            <LazyLoadImage\r\n              src={PortadaLogin}\r\n              id=\"img_portada\"\r\n              alt=\"Portada\"\r\n              height={80}\r\n            />\r\n          </div>\r\n          <div id=\"main_container_form\">\r\n            <h1>ClickSurvey</h1>\r\n            <form id=\"form\">\r\n              <div className=\"form_div\">\r\n                <div className=\"form_div-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    maxLength={50}\r\n                    name=\"email\"\r\n                    autoComplete=\"username\"\r\n                    onChange={(e) => setImail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form_div-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    maxLength={50}\r\n                    name=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"form_btn-submit\"\r\n                  type=\"submit\"\r\n                  onClick={loginUser}\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <div id=\"main_container-register\">\r\n              <span>o</span>\r\n              <p className=\"main_box-register\">\r\n                <span>\r\n                  ¿No tienes una cuenta?{\" \"}\r\n                  <a onClick={navigateRegister}>Registrate</a>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["Footer","lazy","then","console","log","dispatch","useDispatch","email","setImail","useState","password","setPassword","navigate","useNavigate","React","id","LazyLoadImage","src","PortadaLogin","alt","height","className","htmlFor","type","maxLength","name","autoComplete","onChange","e","target","value","placeholder","required","onClick","async","event","preventDefault","objLogin","result","authUser","isRejectedWithValue","MySwal","icon","title","text","payload","allowOutsideClick","allowEscapeKey","allowEnterKey","error","message","navigateRegister"],"sourceRoot":""}